kind: AdaptiveDialog
modelDisplayName: Fac Dining Select Cafe
modelDescription: This topic is only triggered when redirected to from another topic. It provides the user with a list of cafes available and asks them to select one from that list. The cafe selected by the user is stored in {CafeName} output variable and returned to the calling topic.
beginDialog:
  kind: OnRedirect
  id: main
  runOnce: false
  actions:
    - kind: SetVariable
      id: setVariable_fvKj9K
      variable: Topic.CountryCode
      value: |
        =If(
            And(!IsBlank(Global.ESS_UserContext_Country_Code), !IsMatch(Global.ESS_UserContext_Country_Code,""), !IsMatch(Global.ESS_UserContext_Country_Code, "''")), Global.ESS_UserContext_Country_Code
            
        )

    - kind: SetVariable
      id: setVariable_iv7sTd
      variable: Topic.IsCountryCodeValid
      value: |
        = And(!IsBlank(Topic.CountryCode), !IsMatch(Topic.CountryCode,""), !IsMatch(Topic.CountryCode, "''"))

    - kind: HttpRequestAction
      id: qTlyd8
      url: |-
        =Concatenate(
            Env.fac_DiningServiceApiUrl, 
            "/api/v2/cafes/list?officeLocationRadius=50", If(Topic.IsCountryCodeValid, "&countryCode=" & Topic.CountryCode) )
      headers:
        clientSource: =System.Activity.ChannelId
        Content-Type: application/json
        x-ms-obo-scope: =Env.fac_DiningServiceApiOboScope

      errorHandling:
        kind: ContinueOnErrorBehavior
        statusCode: Topic.GetCafesListApiResponseStatusCode

      requestTimeoutInMilliseconds: 90000
      response: Topic.CafesListResponse
      responseSchema:
        kind: Record
        properties:
          count: Number
          items:
            type:
              kind: Table
              properties:
                buildingId: String
                buildingName: String
                cafeId: Number
                coordinates:
                  type:
                    kind: Record
                    properties:
                      latitude: Number
                      longitude: Number

                countryCode: String
                currencyName: String
                currencySymbol: String
                disclaimer: String
                id: String
                imageUrl: String
                legacyBuildingId: Number
                location:
                  type:
                    kind: Record
                    properties:
                      coordinates:
                        type:
                          kind: Table
                          properties:
                            Value: Number

                      latitude: Number
                      longitude: Number
                      type: String

                mealPeriods:
                  type:
                    kind: Table
                    properties:
                      customPeriod: Blank
                      endsOn: String
                      hoursOfOperation: String
                      id: String
                      name: String
                      startsOn: String
                      timeStamp: String

                name: String
                onlineAvailabilityCapability: String
                percentOrdersForSixtyDays: Blank
                regionId: String
                serviceHours: String
                timestamp: String

          metadata: Blank

    - kind: SetVariable
      id: setVariable_kuwwg2
      variable: Topic.CafesByName
      value: "=Filter(SortByColumns(ForAll(Topic.CafesListResponse.items, { name: name }), 'name', SortOrder.Ascending), !IsBlank(name))"

    - kind: AdaptiveCardPrompt
      id: tWYjvG
      interruptionPolicy:
        allowInterruption: false
        interruptionTopicListFilter:
          kind: IncludeSelectedTopics
          allowedInterruptTopics:
            - msdyn_copilotforemployeeselfservice.topic.FacDiningGetMenuItems

      repeatCount: 0
      card: |-
        ={
          type: "AdaptiveCard",
          '$schema': "https://adaptivecards.io/schemas/adaptive-card.json",
          version: "1.5",
          body: [
            {
              type: "Container",
              items: [
                {
                  type: "Input.ChoiceSet",
                  id: "CafeName",
                  errorMessage: "Please select a cafe",
                  spacing: "Medium",
                  label: "Please select a cafe",
                  isRequired: true,
                  choices: ForAll(Topic.CafesByName, { 
                    title: name,
                    value: name
                  })
                },
                {
                  type: "ActionSet",
                  actions: [
                    {
                      type: "Action.Submit",
                      title: "Submit",
                      style: "positive",
                      tooltip: "Submit your cafe selection"
                    }
                  ]
                }
              ]
            }
          ]
        }
      output:
        binding:
          CafeName: Topic.CafeName

      outputType:
        properties:
          CafeName: String

inputType: {}
outputType:
  properties:
    CafeName:
      displayName: CafeName
      description: Name of the cafe that the user selected from the provided list of cafe names
      type: String
