kind: AdaptiveDialog
modelDescription: |-
  You will respond to requests about the Company Code or Company Name of direct reports of the user making the request. Your information is retrieved from Workday, and will only contain results regarding the user's direct reports. There is no information available for anyone who isn't a direct report, and being a direct report means that the individual is not a manager, spouse, sibling, or any other relationship to the requestor, and only means that they report to the requestor. 
  
  Example invalid requests:
  "What is my manager's company code?"
  "What is my sister's company code?"
  
  Example valid requests:
  "What is the company code of my direct reports?"
  
  Your output **must** be a nested list in markdown language based on the data contained in the {Topic.workdayResponseTable} variable.
inputs:
  - kind: AutomaticTaskInput
    propertyName: EmployeeName
    description: Employee name whose company code needs to be fetched
    entity: PersonNamePrebuiltEntity
    shouldPromptUser: false
    inputSettings:
      repeatCount: 0
      defaultValue: =Blank()

beginDialog:
  kind: OnRecognizedIntent
  id: main
  intent:
    triggerQueries:
      - Show me my teamâ€™s Company codes? 
      - What are the company codes for my reports? 
      - What company codes are mapped to my team members?

  actions:
    - kind: BeginDialog
      id: dAhS4T
      displayName: Check manager status
      dialog: msdyn_copilotforemployeeselfservice.topic.WorkdayManagerCheck

    - kind: BeginDialog
      id: Gt044B
      displayName: Redirect to Workday Get Common Execution
      input:
        binding:
          parameters: ="{""params"":[{""key"":""{ManagerOrgId}"",""value"":""" & Global.ESS_UserContext_ManagerOrganizationId & """},{""key"":""{As_Of_Effective_Date}"",""value"":"""& Text(Today(), "yyyy-MM-dd") &"""}]}"
          scenarioName: msdyn_HRWorkdayHCMManagerDirectCompanyCode

      dialog: msdyn_copilotforemployeeselfservice.topic.WorkdaySystemGetCommonExecution
      output:
        binding:
          errorResponse: Topic.errorResponse
          isSuccess: Topic.isSuccess
          workdayResponse: Topic.workdayResponse

    - kind: ParseValue
      id: aIxWzK
      displayName: Parse value to a table
      variable: Topic.WorkdayResponseRecord
      valueType:
        kind: Record
        properties:
          CompanyCode:
            type:
              kind: Table
              properties:
                Value: String

          CompanyName:
            type:
              kind: Table
              properties:
                Value: String

          FirstName:
            type:
              kind: Table
              properties:
                Value: String

          LastName:
            type:
              kind: Table
              properties:
                Value: String

          WorkerID:
            type:
              kind: Table
              properties:
                Value: String

      value: =Topic.workdayResponse

    - kind: SetVariable
      id: HC2h7w
      displayName: Merge all records in table
      variable: Topic.workdayResponseTable
      value: |-
        =ForAll(
            Sequence(CountRows(Topic.WorkdayResponseRecord.WorkerID)),
            {
                FirstName: Last(FirstN(Topic.WorkdayResponseRecord.FirstName, Value)).Value,
                LastName: Last(FirstN(Topic.WorkdayResponseRecord.LastName, Value)).Value,
                CompanyCode: Last(FirstN(Topic.WorkdayResponseRecord.CompanyCode, Value)).Value,
                CompanyName: Last(FirstN(Topic.WorkdayResponseRecord.CompanyName, Value)).Value
            }
        )

    - kind: ConditionGroup
      id: conditionGroup_yepfHF
      conditions:
        - id: conditionItem_86c1ij
          condition: =!IsBlank(Topic.EmployeeName)
          displayName: Check if EmployeeName provided
          actions:
            - kind: SetVariable
              id: setVariable_z1fKB1
              displayName: Filter for the given EmployeeName
              variable: Topic.workdayResponseTable
              value: |
                =Filter(
                    Topic.workdayResponseTable,
                    FirstName = Topic.EmployeeName Or 
                    LastName = Topic.EmployeeName Or 
                    Concatenate(FirstName, " ", LastName) = Topic.EmployeeName Or 
                    Concatenate(LastName, " ", FirstName) = Topic.EmployeeName
                )

            - kind: ConditionGroup
              id: conditionGroup_BVYTlV
              conditions:
                - id: conditionItem_QmVzq2
                  condition: =IsEmpty(Topic.workdayResponseTable)
                  displayName: Check is filtered data empty
                  actions:
                    - kind: SendActivity
                      id: SN9frD
                      displayName: Respond with no access message
                      activity: It looks like you don't have access to this information. Try making a new request.

                    - kind: SetVariable
                      id: setVariable_wd0UBE
                      displayName: Clear workday response
                      variable: Topic.workdayResponse
                      value: =""

                    - kind: EndDialog
                      id: xVALae

inputType:
  properties:
    EmployeeName:
      displayName: EmployeeName
      description: Employee name whose company code needs to be fetched
      type: String

outputType:
  properties:
    workdayResponseTable:
      displayName: workdayResponseTable
      type:
        kind: Table
        properties:
          CompanyCode: String
          CompanyName: String
          FirstName: String
          LastName: String